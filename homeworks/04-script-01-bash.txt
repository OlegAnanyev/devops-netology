1.   
	a=1
	b=2
	
	c=a+b
	vagrant@vagrant:~$ echo $c
	a+b
	#потому что не использовали обращение к переменной через $
	
	d=$a+$b
	vagrant@vagrant:~$ echo $d
	1+2
	#потому что при присвоении значения переменной $d, переменные $a и $b воспринимаются интерпретатором как строковые 
	
	e=$(($a+$b))
	vagrant@vagrant:~$ echo $e
	3
	#потому что двойные скобки явно указывают, что $a и $b должны использоваться как целочисленные переменные

2.
В исходном скрипте не хватало скобки и, что важно, не было оператора break. Я бы оптимизировал скрипт таким образом:
	#!/bin/bash
	while ((1))
		do
			curl http://localhost:80
			if (($? == 0))
			then
				echo "$(date)" "Host is up!" >> curl.log
				break
	
			else
				echo "$(date)" "Host is down!" >> curl.log
			fi
		sleep 5
	done
3.
#!/bin/bash
for i in {1..5}
do
	echo "Checking #$i..."
	for host in 192.168.0.1 173.194.222.113 87.250.250.242
	do
		curl http://"$host":80 --max-time 5 1>/dev/null  2>/dev/null
		if (($? == 0))
		then
			echo "$(date) $host is UP!" >> 3.log
		else
			echo "$(date) $host is DOWN!" >> 3.log
		fi
	done
done

4.
#!/bin/bash
for i in {1..5}
do
	echo "Checking #$i..."
	for host in 173.194.222.113 87.250.250.242 192.168.0.1
	do
		curl http://"$host":80 --max-time 5 1>/dev/null  2>/dev/null
		if (($? == 0))
		then
			echo "$(date) $host is UP!" >> 3.log
		else
			echo "$(date) $host is DOWN!" >> 3.log
			echo "$(date) $host is DOWN!" >> error.log
			exit 1
		fi
	done
done

5*. 
